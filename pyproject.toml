[tool.poetry]
name = "path-planning"
version = "0.1.0"
description = ""
authors = ["Nathan Faber <ntfaber@gmail.com>", "Kate Mackowiak <kmackowiak@olin.edu>", "Bill Fan <wfan@olin.edu>"]
readme = "README.md"
packages = [{include = "path_planning", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.24.2"
nox-poetry = "^1.0.2"
matplotlib = "^3.7.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-mock = "^3.10.0"
flake8 = "^6.0.0"
pyright = "^1.1.301"
flake8-annotations = "^3.0.0"
black = "^23.3.0"
flake8-black = "^0.3.6"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"
flake8-bugbear = "^23.3.23"
darglint = "^1.8.1"
plotly = "^5.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
sandbox = "path_planning.sandbox:main"

[tool.pyright]
include = ["src", "tests"]
stubPath = ""
# venvPath = "."
# venv = ".venv"
# # basic = ["tests"]
# # strict = ["src"]
# # reportMissingParameterType = true
# # reportMissingTypeArgument = true
# # reportUnknownArgumentType = "warning"
# # reportUnknownParameterType = "warning"
# # reportUnknownVariableType = "warning"
# # reportUnusedClass = "warning"
# # reportUnusedImport = "warning"
# # reportUnusedFunction = "warning"
# # reportUnusedVariable = "warning"
# # reportUnnecessaryCast = "warning"
# # reportUnnecessaryComparison = "warning"
